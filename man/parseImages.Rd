% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parseImages.R
\name{parseImages}
\alias{parseImages}
\title{Read Values from DNA and Fluorescent Microscopic Images}
\usage{
parseImages(path, type = "tiff", which.images = c(1, 2, 2),
  pattern = NULL, args.nucMask = NULL, args.trimMask = NULL,
  cellMask.flag = FALSE)
}
\arguments{
\item{path}{Character vector of directory with either multilayer tiff
image files \emph{or} subdirectories identified by well with separate,
paired images per well.}

\item{type}{Character string of image files as "tif", "tiff", "jpeg", "jpg" or "png".}

\item{which.images}{Integer of length 2 or 3. The first two numbers specify
the relative position of the DNA image and the target image. The optional
third number specifies the total images for each field. A value of c(1, 2)
indicates DNA first and target second. A value of c(2, 1) indicates that
the order is target first and DNA image second. A value of c(1, 2, 3)
indicates DNA, target, and a third (ignored) image such as phase contrast
in each set.}

\item{pattern}{Optional grep pattern as character string to select image files}

\item{args.nucMask}{A list of arguments that are to replace any default
arguments in \code{nucMask()}.}

\item{args.trimMask}{A list of arguments that are to replace any default
arguments in \code{trimMask()}. If this value is \code{NA}, no trimming
is performed.}

\item{cellMask.flag}{If this \code{logical} value is \code{TRUE}, the default
nuclear mask will be replaced with a mask generated by \code{cellMask()}
and used to measure fluorescent intensity in the target image.}
}
\value{
A data.frame of processed image data. All data.frames will have the
following variables:
\describe{
  \item{\code{directory}}{Path to enclosing folder.}
  \item{\code{frame}}{Image sequence (1, 2, 3, ...)}
  \item{\code{xm, ym}}{Center of mass (in pixels) for nucleus.}
  \item{\code{area}}{Area of mask (nuclear or cell).}
  \item{\code{dna}}{Mean fluorescence intensity for DNA stain,
    typically not meaningful with over-exposed images.}
  \item{\code{mfi}}{Mean fluorescence intensity for signal of interest,
    measured in given mask.}
}
Results from data organized by well will include \code{well}, \code{row}
and \code{column} values as factors.

Results from data organized as stacks (multi-layered tiff files) will
include the filename in \code{file} as a factor.
}
\description{
Read DNA and fluorescent images organized as paired images. Return mean
fluorescence intensity values for DNA and related fluorescent image.
}
\details{
This is the core function to read and parse image data in a suite of tools
implemented with \code{\link{EBImage}} that has been developed to determine
viral titers from fluorescent micrograph pairs, where the first of each pair
is an (ideally overexposed) DNA image and the second a fluorescent image
represents the target or viral signal.

This function was developed to process fluorescent virus titers
performed in multi-well plates and is designed to parse pairs of images
collected at different multiplicities of infection or moi. This
information (moi) is expressed as virions (VP) \emph{or} infectious
units (IU) \emph{or} volume (ml, ul, nl) per cell and is added to the
data generated with this funciton with the \code{mergePdata()} function.
The nuclear (typically DAPI) image file is expected to precede the
corresponding viral antigen image file but this order can be changed with
the \code{which.images} argument.

Pairs of images associated with each moi can be individual files in a
single directory where each directory is named for the well such as a1,
a2, etc. and the files within are identified as
\code{a1/file001.tif}, \code{a1/file002.tif}, etc. The well can be either upper
or lower case and can contain leading zeros.

Alternatively, each group of images associated with a given moi can be
a multi-layered tiff file where the sequence of images is
specified by the argument \code{which.images}.
}
\examples{
#
# Note that execution of these examples can be rather slow...
#
  path.by.folder <- system.file("extdata", "by_folder", package = "virustiter")
  df.by.folder <- parseImages(path.by.folder)
  head(df.by.folder)[-1] # drop potentially log directory name

  path.by.stack <- system.file("extdata", "by_stack", package = "virustiter")
  df.by.stack <- parseImages(path.by.stack)
  head(df.by.stack)[-1] # drop potentially log directory name
#
# plot
#
  opar <- par(mfrow = c(1,2))
  plot(log(mfi) ~ area, df.by.folder, main = "By Folder", las = 1)
  plot(log(mfi) ~ area, df.by.stack, main = "By Stack", las = 1)
  par(opar)

}
