% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getShift.R
\name{getShift}
\alias{getShift}
\title{Determine Optimal Image Shift}
\usage{
getShift(mask, target, parscale = c(25, 25), FUN = idiff)
}
\arguments{
\item{mask}{An object mask with connected pixels having the same 
integer value.}

\item{target}{A fluorescent \code{Image} object corresponding to the 
nuclear masks in \code{mask}.}

\item{parscale}{A numeric vector of length 2 used as the 
\code{parscale} parameter for the \code{optim()} function. See 
\code{\link{optim}} for more details.}

\item{FUN}{Function to be minimized over \code{x[1]} and \code{x[2]} 
by \code{optim()}. See the details for more information.}
}
\value{
A list of subpixel translations named \code{"dx"} and \code{"dy"} 
that can be applied to the argument \code{target} with
\code{translate()} to maximize the alignment between mask and target.
}
\description{
Determine the optimal x-y shift to align the target image with the
(nuclear) mask.
}
\details{
This optimization function \code{FUN} accepts three arguments 
(\code{x, mask, target}) where \code{x} is a numeric vector of
length two representing the x and y position in the integer 
\code{Image} mask (\code{mask}) and the \code{Image} object 
(\code{target}). \code{FUN} must return a single value
representing the difference between the two images. The 
\code{optim()} function minimizes \code{FUN} with respect to
\code{x[1]} and \code{x[2]}. The default function is designed
to align nuclear masks with predominantly nuclear signals and
should be replaced for other localization patterns. 

The argument \code{parscale} is used by \code{optim()} to scale the 
parameters in \code{x} such that a unit change in the parameter 
amounts to unit change in the optimizing function empirically, 
\code{c(25, 25)} seems to be in the middle of a robust range.
}
\examples{
 path <- system.file("extdata", "by_folder/b2", package = "virustiter")
 x <- getImages(path)
 getShift(nucMask(x$nuc[[1]]), x$tgt[[1]])

}
