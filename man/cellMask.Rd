% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cellMask.R
\name{cellMask}
\alias{cellMask}
\title{Voronoi Cell Segmentation from Nuclei}
\usage{
cellMask(nmask, cmask = NULL, brush = NULL, lambda = 1e-04)
}
\arguments{
\item{nmask}{A segmented nuclear mask such as generated by
\code{nucMask()}.}

\item{cmask}{An optional \code{Image} object or an array containing a 
binary mask defining regions of the image to be segmented. If this value  
is \code{NULL}, the nuclear mask (\code{nmask}) will be expanded for 
Voronoi segmentation.}

\item{brush}{Size of the brush size to expand the nuclear mask as an 
odd number of pixels. If this value is \code{NULL}, the mean value of 
the major axis of all nuclei will be used.}

\item{lambda}{A numeric value used by \code{propagate()} determining 
the trade-off between the Euclidean distance in the image plane and the 
contribution of the gradient. See \code{\link[EBImage]{propagate}} for details.}
}
\value{
An \code{Image} object produced by \code{propagate()} containing the labeled
objects (cells).
}
\description{
Define boundaries between adjacent cells (regions) from a
nuclear mask and optional cellular mask with the
\code{\link[EBImage]{propagate}}.
}
\details{
Create a mask to define cellular boundaries from a nuclear mask in 
\code{nmask} and an optional cytoplasmic mask \code{cmask}. If 
\code{cmask} is \code{NULL}, the nuclear mask will be dilated with a
disc-shaped brush of size equal to \code{brush} or, if \code{brush} is
\code{NULL}, the mean semi-major axis of the nuclei.
If \code{cmask} is not \code{NULL}, this must be a binary mask defining
the limits for the Voronoi segmentation based on seeds provided by
\code{nmask}. Such a binary mask can be created from a non-specific
cytoplasmic stain such as actin or a diffuse membrane stain.

To create a cytoplasmic mask that excludes the nucleus, simply subtract
the nuclear mask from the cell mask as shown below:

  \code{cytoMask <- cellMask(nmask) - nmask}
}
\examples{
x <- readImage(system.file("extdata", "by_folder/b2/file001.tif", package = "virustiter"))
y <- readImage(system.file("extdata", "by_folder/b2/file002.tif", package = "virustiter"))
nm <- nucMask(x)
cm <- cellMask(nm)
img <- rgbImage(red = normalize(y) * 0.8, green = normalize(y) * 0.2)
img <- paintObjects(nm, img, col = "yellow")
img <- paintObjects(cm, img, col = "green")
plot(img)

}
